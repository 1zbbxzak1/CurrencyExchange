# Версия спецификации Docker Compose
version: "3.8"

services:
  # Основной сервис приложения обмена валют
  currency-exchange:
    image: currency-exchange
    build:
      context: .
      dockerfile: Dockerfile
    container_name: currency-exchange-app
    restart: unless-stopped  # Автоматический перезапуск при сбоях
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      # Настройки для JVM
      - JAVA_OPTS=-Xmx512m -Xms256m
    networks:
      - app-network
    volumes:
      - ./src/main/resources/application.properties:/app/application.properties:ro
      - app-logs:/app/logs  # Том для логов приложения
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:  # Проверка работоспособности приложения
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:  # Настройки развертывания
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  # Сервис базы данных PostgreSQL
  postgres:
    image: postgres:latest
    container_name: currency-exchange-db
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    networks:
      - app-network
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d:ro  # Скрипты инициализации БД
    healthcheck:  # Проверка работоспособности БД
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 256M

  # Сервис для мониторинга Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    networks:
      - app-network
    depends_on:
      currency-exchange:
        condition: service_healthy
    restart: unless-stopped

  # Сервис визуализации метрик Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      # Автоматическая настройка дашбордов
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/etc/grafana/provisioning/dashboards/currency-exchange.json
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
    networks:
      - app-network
    depends_on:
      - prometheus
    restart: unless-stopped

# Определение сетей
networks:
  app-network:
    driver: bridge
    name: currency-exchange-network

# Определение томов для хранения данных
volumes:
  postgres-data:
    name: currency-exchange-postgres-data
  app-logs:
    name: currency-exchange-app-logs
  prometheus-data:
    name: currency-exchange-prometheus-data
  grafana-data:
    name: currency-exchange-grafana-data
